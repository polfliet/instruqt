#!/bin/bash

if ! curl --silent --fail --output /dev/null http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/; then
  echo "Starting Kubernetes, this may take a minute or so"
  while ! curl --silent --fail --output /dev/null http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/; do printf "." && sleep 1; done || break
  printf "done."
  echo ""
fi

# Install unzip
sudo apt-get install unzip

# Download helper script
wget https://raw.githubusercontent.com/polfliet/instruqt/master/kubernetes-new-relic-university/assets/scripts/get-metrics-ip.sh
chmod +x get-metrics-ip.sh

# Create the demo app in our k8s cluster
mkdir app/
pushd app/
wget https://raw.githubusercontent.com/polfliet/instruqt/master/kubernetes-new-relic-university/assets/app/rabbitmq.yaml
wget https://raw.githubusercontent.com/polfliet/instruqt/master/kubernetes-new-relic-university/assets/app/redis.yaml
wget https://raw.githubusercontent.com/polfliet/instruqt/master/kubernetes-new-relic-university/assets/app/frontend.yaml
wget https://raw.githubusercontent.com/polfliet/instruqt/master/kubernetes-new-relic-university/assets/app/parser.yaml
wget https://raw.githubusercontent.com/polfliet/instruqt/master/kubernetes-new-relic-university/assets/app/worker.yaml

kubectl create namespace demo-app
kubectl create -f rabbitmq.yaml -n demo-app
kubectl create -f redis.yaml -n demo-app
kubectl create -f frontend.yaml -n demo-app
kubectl create -f parser.yaml -n demo-app
kubectl create -f worker.yaml -n demo-app
popd