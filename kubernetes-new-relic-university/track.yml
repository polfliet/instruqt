slug: kubernetes-new-relic-university
id: dyjhnodiwxxz
type: track
title: Kubernetes - New Relic University
teaser: Learn how to get full observability in a Kubernetes environment with New Relic
description: "# New Relic - Observability for Kubernetes \n\nDuring this tutorial,
  we will learn how to get full visibility into a Kubernetes cluster following New
  Relic's Observability maturity model:\n\n![Kubernetes maturity model](https://github.com/polfliet/instruqt/blob/master/kubernetes-new-relic-university/screenshots/maturity-model.png?raw=true
  \"Kubernetes maturity model\")\n\nWe will go through the following steps:\n\n##
  Overall Kubernetes Health & Capacity\n\n* Using Kubernetes secrets\n\n* **kube-state-metrics**
  for overall health state of each Kubernetes object\n\n* Using DaemonSets\n\n* Controlling
  cluster capacity with resource requests & resource limits\n\n## Dynamic cluster
  behavior\n\n* Understanding the Kubernetes API server\n\n* Using Kubernetes health
  checks\n\n* Track important **Kubernetes events** with the **New Relic Kubernetes
  events integration**\n\n# Microservices performance\n* Introduction to Distributed
  Tracing\n* Correlating application performance data in the context of Kubernetes\n\n#
  Log correlation\n* Introduction to log forwarding with Fluent Bit\n* Capture **Kubernetes
  logs** from your pods with New Relic's Fluent Bit plugin\n\n# Complete service observability\n*
  Introduction to the Prometheus OpenMetrics format\n* Install the New Relic **Prometheus**
  integration to get any Prometheus data\n* Using New Relic service integrations\n"
icon: https://storage.googleapis.com/instruqt-frontend/img/tracks/kubernetes.png
tags:
- kubernetes
owner: newrelic
developers:
- svandamme@newrelic.com
- lhurrell@newrelic.com
- spolfliet@newrelic.com
private: false
published: false
challenges:
- slug: kubernetes-secrets
  id: sua74knxvnml
  type: challenge
  title: Using Kubernetes secrets
  teaser: Use a Kubernetes secret to store the New Relic license key
  assignment: "Use a Kubernetes secret to store passwords or license keys in your
    Kubernetes cluster.\n\nWe will create a Kubernetes secret that contains our New
    Relic License key. \n*(Kubernetes secrets are used to store sensitive information
    such as passwords and license keys in a Kubernetes cluster â€“ we can set this once
    and then re-use it in all our New Relic configurations.)*\n\n### Get your New
    Relic license key\nRetrieve your New Relic license key by logging in to your New
    Relic account, and clicking on Account Settings:\n\n![alt text](https://github.com/polfliet/instruqt/blob/master/kubernetes-new-relic-university/screenshots/nrlicense.gif?raw=true
    \"License key\")\n\n### Create the Kubernetes secret\nCreate the Kubernetes secret
    by copying the following line and **put your license key between the quotes**
    before pressing enter.\n\n`kubectl create secret generic newrelic-secret --from-literal=new_relic_license_key='<YOUR_NEW_RELIC_LICENSE_KEY>'`\n\nIf
    you made a mistake, you should delete the secret with *kubectl delete secret newrelic-secret*\n\nThe
    yaml files in the rest of this tutorial will refer to this *newrelic-secret*\n"
  tabs:
  - title: Shell
    type: terminal
    hostname: kubernetes
  - title: New Relic One
    type: website
    hostname: kubernetes
    url: https://one.newrelic.com
  difficulty: basic
  timelimit: 500
checksum: "11869501466981867986"
