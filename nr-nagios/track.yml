slug: nr-nagios
id: hbmyez0cy8rt
version: 0.0.1
type: track
title: New Relic Nagios Integration
teaser: Learn how to re-use your existing Nagios scripts with the New Relic Nagios
  integration
description: No need to keep your Nagios server. The New Relic Nagios integration
  can directly execute your existing Nagios scripts and stream the data to the New
  Relic platform.
icon: ""
tags:
- nagios, infrastructure
owner: newrelic
developers:
- spolfliet@newrelic.com
private: true
published: true
challenges:
- slug: nr-infrastructure
  id: vdoe4uig7jxc
  type: challenge
  title: Install New Relic Infrastructure
  teaser: First install the New Relic Infrastructure agent
  assignment: |-
    We will first install the New Relic Infrastructure agent on this host.
    More detailed instructions can be found on [docs.newrelic.com](https://docs.newrelic.com/docs/infrastructure/install-configure-manage-infrastructure/linux-installation/install-infrastructure-linux-using-package-manager) for the Operating System of your choice.

    # Get your New Relic license key
    First we need to retrieve your New Relic license key by logging in to your New Relic account, and clicking on Account Settings.

    If you don't have an account yet you can create a free account on [New Relic.com](https://newrelic.com/signup).

    ![alt text](https://github.com/polfliet/instruqt/blob/master/kubernetes-new-relic-university/screenshots/nrlicense.gif?raw=true "License key")

    # Create config file
    Create a configuration file, and add your license key (click the copy icon and paste in the terminal):
    ```
    echo "license_key: <YOUR_LICENSE_KEY>" | tee -a /etc/newrelic-infra.yml
    ```

    *Don't forget to update <YOUR_LICENSE_KEY>

    # Enable New Relic's GPG key:
    ```
    curl https://download.newrelic.com/infrastructure_agent/gpg/newrelic-infra.gpg | apt-key add -
    ```

    # Update apt repository
    ```
    printf "deb [arch=amd64] https://download.newrelic.com/infrastructure_agent/linux/apt xenial main" | tee -a /etc/apt/sources.list.d/newrelic-infra.list
    ```

    # Update apt package manager
    ```
    apt-get update
    ```

    # Install New Relic Infrastructure agent
    ```
    apt-get install newrelic-infra -y
    ```
  tabs:
  - title: Terminal
    type: terminal
    hostname: ubuntu
  difficulty: basic
  timelimit: 900
- slug: nr-nagios
  id: fo5ujrluejk1
  type: challenge
  title: Install Nagios integration
  teaser: Install the Nagios integration
  assignment: "More detailed instructions can be found on [docs.newrelic.com](https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/nagios-monitoring-integration)\n\n#
    Install the Nagios integration\n```\nsudo apt-get install nri-nagios -y\n```\n\n#
    Navigate to the New Relic integrations folder:\n```\ncd /etc/newrelic-infra/integrations.d\n```\n\n#
    Copy the sample configuration file \n```\nsudo cp nagios-config.yml.sample nagios-config.yml\n```\n\n#
    Configuring the Nagios integration \nCheck the contents of the service_checks.yml
    file.\nThis file contains the Nagios scripts that will be executed by the New
    Relic agent.\n\n```\nsudo cat /etc/newrelic-infra/integrations.d/service_checks.yml\n```\nThis
    example file contains 1 service check.\n\nThe check_users Nagios script is already
    available on this machine. \n\n# Update permissions\nThe service_checks.yml file
    requires permissive file permissions (0600)\n```\nsudo chmod 600 /etc/newrelic-infra/integrations.d/service_checks.yml\n```\n\n#
    Restart the New Relic agent\nAfter restarting the agent, the check_users Nagios
    script will be executed and the output will be sent to New Relic\n```\nsudo systemctl
    restart newrelic-infra\n```"
  tabs:
  - title: Terminal
    type: terminal
    hostname: ubuntu
  difficulty: basic
  timelimit: 900
- slug: nagios-dashboards
  id: pyhbppoh79m8
  type: challenge
  title: Building dashboards
  teaser: Build a dashboard with the Nagios data
  assignment: |-
    # New Relic One Chart Builder

    Go to [one.newrelic.com](https://one.newrelic.com)

    Open the Chart builder to explore the data. Click on the Chart builder in the top right corner.

    ![alt text](https://github.com/polfliet/katacoda-scenarios/blob/master/nagios/screenshots/chartbuilder.png?raw=true "Chart Builder")

    The data is stored in NagiosSample, so we can query:
    ```
    FROM NagiosServiceCheckSample SELECT * limit 5
    ```

    ![alt text](https://github.com/polfliet/katacoda-scenarios/blob/master/nagios/screenshots/query1.png?raw=true "Query")

    Use the following query to check the status and output of the Nagios script:
    ```
    FROM NagiosServiceCheckSample select serviceCheck.name, serviceCheck.status, serviceCheck.serviceOutput limit 5
    ```

    ![alt text](https://github.com/polfliet/katacoda-scenarios/blob/master/nagios/screenshots/query2.png?raw=true "Query2")

    To visualize the status of a Nagios script over time, use:
    ```
    FROM NagiosServiceCheckSample select latest(serviceCheck.status) where serviceCheck.name = 'check_users' TIMESERIES
    ```

    ![alt text](https://github.com/polfliet/katacoda-scenarios/blob/master/nagios/screenshots/chart.png?raw=true "Chart")
  tabs:
  - title: Terminal
    type: terminal
    hostname: ubuntu
  difficulty: basic
  timelimit: 500
- slug: nagios-alerts
  id: a7eoagc4nx0d
  type: challenge
  title: Creating alerts
  teaser: Learn how to set alerts for your Nagios scripts
  assignment: TODO
  difficulty: basic
  timelimit: 500
checksum: "110647743585730437"
