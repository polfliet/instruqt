slug: consolidating-your-data-with-new-relics-telemetry-data-platform
id: ovfk9qaewiyy
type: track
title: Consolidating your data with New Relic's Telemetry Data Platform
teaser: Learn how to ingest all of the MELT data types from various sources into New
  Relic's Telemetry Data Platform
description: |-
  A long description of the track.

  You can use any GitHub flavoured markdown.
icon: https://storage.googleapis.com/instruqt-frontend/img/tracks/default.png
tags:
- New Relic
owner: newrelic
developers:
- emittelhammer@newrelic.com
private: false
published: false
challenges:
- slug: set-up-new-relic-infrastructure
  id: pxrk5xdyroax
  type: challenge
  title: Set Up New Relic Infrastructure
  teaser: Configure the New Relic Infrastructure Agent
  assignment: |-
    We will be working on a single virtual machine running several Docker
    containers.
    The New Relic Infrastructure agent has been installed on this host,
    but it hasn't been configured to send data to your account yet.
    
    In the editor tab to the right, open up the file `/etc/newrelic-infra.yml`.  
    
    Uncomment the line
    ```
    #license_key: your_license_key
    ```
    by removing the `#` at the beginning of the line. Replace the placeholder text with your own license key, which can be found under
    your account settings.
    
    Save the file by clicking the disk icon in the tab.
    
    Then, using the Shell tab, enter the following command to restart the agent for the
    settings to take effect:
    ```
    systemctl restart newrelic-infra
    ```
    While you wait for data to appear in New Relic One, read through the tab labeled
    "Overview" to get a better understanding of what we're going to accomplish in
    this track.
    
    After a few mometns, you should see a host named `newrelic-training-dockerhost`
    in your account. The tab labeled "Explanation" will guide you through finding
    the data in your New Relic dashboard before completing the challenge.
    
    Now would be a good time to create a new dasboard where we can visualize all of the data
    we're going to collect!
    
    Before continuing, be sure:
    - [ ] you are seeing data for a host named `newrelic-training-dockerhost` in New Relic One.
    - [ ] you have created a new dashboard to add charts to for the following challenges in this track.
  notes:
  - type: text
    contents: Have your New Relic license key ready, we're going to configure the
      Infrastructure agent to send data to your account.
  tabs:
  - title: New Relic Infrastructure Configuration
    type: code
    hostname: dockerhost
    path: /etc/newrelic-infra.yml
  - title: Shell
    type: terminal
    hostname: dockerhost
  - title: Overview
    type: service
    hostname: dockerhost
    path: /01-set-up-new-relic-infrastructure/overview.md
    port: 3080
  - title: Explanation
    type: service
    hostname: dockerhost
    path: /01-set-up-new-relic-infrastructure/explanation.md
    port: 3080
  difficulty: basic
  timelimit: 600
- slug: collect-events-and-traces-with-new-relic-apm
  id: puelt47xjbiw
  type: challenge
  title: Collect Events and Traces with New Relic APM
  teaser: Install New Relic APM on the Ecommerce API application.
  assignment: |-
    Now that we've installed the Infrastructure agent, it's time to get some data from our ecommerce api application.
    To the right is a code editor tab.  Open the file named `.env`.  This is used to pass environment variables into Docker containers.
    We can use environment variables to send configuration options to the New Relic APM agent running in our container.

    Delete or comment out the line:
    ```
    NEW_RELIC_ENABLED=false
    ```
    and _un_-comment the line beginning with `LICENSE_KEY`, replacing the placeholder text with your license key.
    
    Then save the file by clicking the disk icon on the tab header.
    
    In the shell tab to the right, run:
    ```
    cd apps
    ```

    Then, resart the ecommerce api application by running:
    ```
    docker-compose up -d
    ```
    Read more about the data we are collecting, and what to add to your dashboard in the "Explanation" tab.

    Before continuing, be sure:
    - [ ] you are seeing data for an application named `newrelic-training-ecommerce-api` in New Relic One.
    - [ ] you have created the charts described in the "Explanation" tab.
  notes:
  - type: text
    contents: Replace this text with your own text
  tabs:
  - title: Environment Variables
    type: code
    hostname: dockerhost
    path: /root/apps/.env
  - title: Shell
    type: terminal
    hostname: dockerhost
  - title: Explanation
    type: service
    hostname: dockerhost
    path: /02-collect-events-and-traces-with-new-relic-apm/explanation.md
    port: 3080
  difficulty: basic
  timelimit: 600
- slug: collect-your-application-logs
  id: hupa4ptgwkp8
  type: challenge
  title: Collect Your Application Logs
  teaser: Use the New Relic Infrastructure agent to collect logs from the ecommerce
    api.
  assignment: |-
    So far, we've collected Metrics, Events, and Traces using the New Relic Infrastructure and APM agents to get a rich view of how our application is performing.  However, we can complement this with the information our application is writing to it's log files.

    The New Relic Infrastructure agent also functions as a lightweight log collector and shipper.  We'll use it to read in our application's logs and send them to the New Relic Telemetry Data Platform.

    Our application is writing logs to a file located at `/var/log/ecommerce-api/application.log`.
    In the shell tab to the right, run the following command to see what those logs look like:
    ```
    tail /var/log/ecommerce-api/application.log
    ```
    Notice that the logs are in `json` format, and that in addition to the `message` field, each log has been "enriched" by the New Relic APM agent with additional fields.  This is [logs in context](https://docs.newrelic.com/docs/logs/enable-log-management-new-relic/configure-logs-context/configure-logs-context-apm-agents) at work - a powerful feature which automatically correlates log messages with the applicaiton traces that created them.

    To send these logs the New Relic, we need to tell the Infrastructure agent where to find them.

    Use the code editor tab at the right to view the `application-logs.yml` file to see how that's done.

    No need to edit anything, just copy the file into the Infrastructure agent's configuration directory:
    ```
    cp /configs/application-logs.yml /etc/newrelic/logging.d/
    ```
    The agent should automatically load the configuration and start sending those log messages to your account!

    Get a deeper understanding of how to use that data in the "Explanation" tab to the right.

    Before continuing, be sure:
    - [ ] you are able to view log messages from the `newrelic-training-ecommerce-api` application in the New Relic One logs UI.
    - [ ] you have created the charts described in the "Explanation" tab.
  notes:
  - type: text
    contents: Replace this text with your own text
  tabs:
  - title: Configuration Files
    type: code
    hostname: dockerhost
    path: /root/configs
  - title: Shell
    type: terminal
    hostname: dockerhost
  - title: Explanation
    type: service
    hostname: dockerhost
    path: /03-collect-your-application-logs/explanation.md
    port: 3080
  difficulty: basic
  timelimit: 600
- slug: collect-nginx-metrics-in-prometheus-format
  id: gypxcuu8mydi
  type: challenge
  title: Collect NGINX Metrics in Prometheus Format
  teaser: A short description of the challenge.
  assignment: |-
    run:
    ```
    docker run -d --restart unless-stopped \
    --name nri-prometheus \
    --network="apps_default"
    -e LICENSE_KEY="YOUR_LICENSE_KEY" \
    -v "$(pwd)/configs/nginx-prometheus.yml:/config.yaml" \
    newrelic/nri-prometheus:1.5
    ```
  notes:
  - type: text
    contents: Replace this text with your own text
  tabs:
  - title: Configuration Files
    type: code
    hostname: dockerhost
    path: /root/configs
  - title: Shell
    type: terminal
    hostname: dockerhost
  difficulty: basic
  timelimit: 600
- slug: collect-redis-metrics-with-flex
  id: kskcr0i7ymw0
  type: challenge
  title: Collect Redis Metrics with Flex
  teaser: A short description of the challenge.
  assignment: Move redis-flex.yml to /etc/newrelic/integrations.d/
  notes:
  - type: text
    contents: Replace this text with your own text
  tabs:
  - title: Configuration Files
    type: code
    hostname: dockerhost
    path: /root/configs
  - title: Shell
    type: terminal
    hostname: dockerhost
  difficulty: basic
  timelimit: 600
- slug: collect-custom-business-metrics-with-flex
  id: 4kviv252susu
  type: challenge
  title: Collect Custom Business Metrics with Flex
  teaser: A short description of the challenge.
  assignment: Move daily-total-flex.yml to /etc/newrelic/integrations.d
  notes:
  - type: text
    contents: Replace this text with your own text
  tabs:
  - title: Configuration Files
    type: code
    hostname: dockerhost
    path: /root/configs
  - title: Shell
    type: terminal
    hostname: dockerhost
  difficulty: basic
  timelimit: 600
checksum: "3254507799368161037"
